name: Update Pi Network Rate

on:
  schedule:
    - cron: '*/30 * * * *' # Every 30 minutes
  workflow_dispatch:

jobs:
  scrape-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Fetch data from CoinGecko API
        id: coingecko
        run: |
          response=$(curl --silent --request GET \
            --url 'https://api.coingecko.com/api/v3/simple/price?vs_currencies=gbp&ids=pi-network&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true&include_last_updated_at=true&precision=5' \
            --header 'accept: application/json' \
            --header "x-cg-demo-api-key: ${{ secrets.COINGECKO_API_KEY }}" )

          echo "Raw API response: $response"

          gbp=$(echo "$response" | jq '.["pi-network"].gbp')
          market_cap=$(echo "$response" | jq '.["pi-network"].gbp_market_cap')
          change=$(echo "$response" | jq '.["pi-network"].gbp_24h_change')
          volume=$(echo "$response" | jq '.["pi-network"].gbp_24h_vol')
          updated_at=$(echo "$response" | jq '.["pi-network"].last_updated_at')
          iso_time=$(date -u -d "@$updated_at" --iso-8601=seconds)

          echo "{
            \"exchangeRateGBP\": $gbp,
            \"marketCapGBP\": $market_cap,
            \"percentageChange\": $change,
            \"24h_vol\": $volume,
            \"24h_change\": $change,
            \"lastUpdated\": \"$iso_time\"
          }" > public/data/data.json

      - name: Commit and create pull request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: rate-update-${{ github.run_id }}
          title: "Update Pi Network Rate"
          body: "Automated update from CoinGecko API"
          commit-message: "Update Pi Network data from CoinGecko"

      - name: Merge Pull Request using GitHub CLI
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(gh pr list --state open --head rate-update-${{ github.run_id }} --json number -q '.[0].number')
          if [ -n "$PR_NUMBER" ]; then
            echo "Merging PR #$PR_NUMBER"
            gh pr merge "$PR_NUMBER" --merge --delete-branch --yes
          else
            echo "❌ No matching PR found to merge."
            exit 1
          fi

      - name: Trigger deploy.yml workflow
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run deploy.yml

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "❌ Pi Rate Update Failed",
              body: "An error occurred during the scheduled run. Check logs here: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            });
